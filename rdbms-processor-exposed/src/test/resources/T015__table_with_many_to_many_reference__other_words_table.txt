package io.bkbn.lerasium.generated.persistence.table

import io.bkbn.lerasium.core.converter.ConvertTo
import io.bkbn.lerasium.generated.domain.OtherWords
import java.util.UUID
import kotlin.String
import kotlinx.datetime.LocalDateTime
import org.jetbrains.exposed.dao.UUIDEntity
import org.jetbrains.exposed.dao.UUIDEntityClass
import org.jetbrains.exposed.dao.id.EntityID
import org.jetbrains.exposed.dao.id.UUIDTable
import org.jetbrains.exposed.sql.Column
import org.jetbrains.exposed.sql.kotlin.datetime.datetime

public object OtherWordsTable : UUIDTable("other_words") {
  public val wordy: Column<String> = varchar("wordy", 128)

  public val createdAt: Column<LocalDateTime> = datetime("created_at")

  public val updatedAt: Column<LocalDateTime> = datetime("updated_at")
}

public class OtherWordsEntity(
  id: EntityID<UUID>,
) : UUIDEntity(id), ConvertTo<OtherWords> {
  public var wordy: String by OtherWordsTable.wordy

  public var createdAt: LocalDateTime by OtherWordsTable.createdAt

  public var updatedAt: LocalDateTime by OtherWordsTable.updatedAt

  public override fun to(): OtherWords = OtherWords(
    id = this.id.value,
    wordy = this.wordy,
  )

  public companion object : UUIDEntityClass<OtherWordsEntity>(OtherWordsTable)
}
