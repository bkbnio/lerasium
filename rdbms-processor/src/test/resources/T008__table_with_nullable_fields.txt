package io.bkbn.lerasium.generated.persistence.entity

import io.bkbn.lerasium.core.model.Entity
import io.bkbn.lerasium.generated.models.LettersResponse
import java.util.UUID
import kotlin.Boolean
import kotlin.Double
import kotlin.Float
import kotlin.Int
import kotlin.Long
import kotlin.String
import kotlin.reflect.full.memberProperties
import kotlin.reflect.full.valueParameters
import kotlinx.datetime.LocalDateTime
import org.jetbrains.exposed.dao.UUIDEntity
import org.jetbrains.exposed.dao.UUIDEntityClass
import org.jetbrains.exposed.dao.id.EntityID
import org.jetbrains.exposed.dao.id.UUIDTable
import org.jetbrains.exposed.sql.Column
import org.jetbrains.exposed.sql.kotlin.datetime.datetime

public object LettersTable : UUIDTable("letters") {
  public val s: Column<String?> = varchar("s", 128).nullable()

  public val i: Column<Int?> = integer("i").nullable()

  public val l: Column<Long?> = long("l").nullable()

  public val b: Column<Boolean?> = bool("b").nullable()

  public val d: Column<Double?> = double("d").nullable()

  public val f: Column<Float?> = float("f").nullable()

  public val createdAt: Column<LocalDateTime> = datetime("created_at")

  public val updatedAt: Column<LocalDateTime> = datetime("updated_at")
}

public class LettersEntity(
  id: EntityID<UUID>,
) : UUIDEntity(id), Entity<LettersResponse> {
  public var s: String? by LettersTable.s

  public var i: Int? by LettersTable.i

  public var l: Long? by LettersTable.l

  public var b: Boolean? by LettersTable.b

  public var d: Double? by LettersTable.d

  public var f: Float? by LettersTable.f

  public var createdAt: LocalDateTime by LettersTable.createdAt

  public var updatedAt: LocalDateTime by LettersTable.updatedAt

  public override fun toResponse(): LettersResponse = with(::LettersResponse) {
    val propertiesByName = LettersEntity::class.memberProperties.associateBy { it.name }
    val params = valueParameters.associateWith {
      when (it.name) {
        LettersResponse::id.name -> id.value
        else -> propertiesByName[it.name]?.get(this@LettersEntity)
      }
    }
    callBy(params)
  }

  public companion object : UUIDEntityClass<LettersEntity>(LettersTable)
}
