package io.bkbn.lerasium.generated.persistence.table

import io.bkbn.lerasium.core.converter.ConvertTo
import io.bkbn.lerasium.generated.domain.UserDomain
import java.util.UUID
import kotlin.Boolean
import kotlin.Float
import kotlin.Int
import kotlin.Long
import kotlin.String
import kotlinx.datetime.Instant
import org.komapper.`annotation`.KomapperCreatedAt
import org.komapper.`annotation`.KomapperEntity
import org.komapper.`annotation`.KomapperId
import org.komapper.`annotation`.KomapperTable
import org.komapper.`annotation`.KomapperUpdatedAt
import org.komapper.`annotation`.KomapperVersion

@KomapperEntity(aliases = ["user"])
@KomapperTable(name = "user")
public data class UserTable(
  public val name: String,
  public val count: Int,
  public val isFact: Boolean,
  public val size: Long,
  public val pointyNum: Float,
  @KomapperId
  public val id: UUID = UUID.randomUUID(),
  @KomapperVersion
  public val version: Int = 0,
  @KomapperCreatedAt
  public val createdAt: Instant? = null,
  @KomapperUpdatedAt
  public val updatedAt: Instant? = null,
) : ConvertTo<UserDomain> {
  override suspend fun to(): UserDomain = UserDomain(
    name = name,
    count = count,
    isFact = isFact,
    size = size,
    pointyNum = pointyNum,
  )
}