package test

import io.bkbn.lerasium.core.Domain
import io.bkbn.lerasium.rdbms.Table
import io.bkbn.lerasium.rdbms.ForeignKey
import io.bkbn.lerasium.core.auth.CrudAction
import io.bkbn.bouncer.core.rbacPolicy
import io.bkbn.lerasium.core.auth.RbacPolicyProvider

@Domain("User")
@Table
@Policy("user")
interface User {
  val email: String
  val password: String
}

@Api
@Domain("OrganizationRole")
@Table
interface OrganizationRole {
  @ForeignKey
  val organization: Organization
  @ForeignKey
  val user: User
  val role: Type

  @Serializable
  enum class Type {
    ADMIN,
    MAINTAINER,
    CONTRIBUTOR
  }
}

@Api
@Domain("Organization")
@Table
interface Organization {
  val name: String

  companion object {
    val userRbac =
      object : RbacPolicyProvider<User, CrudAction, OrganizationRole, OrganizationRole.Type, Organization> {
        override val policy = rbacPolicy<User, CrudAction, OrganizationRole.Type, Organization> {
          can(
            "Admin can always delete an organization",
            CrudAction.DELETE,
            OrganizationRole.Type.ADMIN
          ) { _, _, _ -> true }
        }
      }
  }
}
