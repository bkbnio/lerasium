package io.bkbn.lerasium.generated.persistence.table

import io.bkbn.lerasium.core.converter.ConvertTo
import io.bkbn.lerasium.generated.domain.Words
import java.util.UUID
import kotlin.String
import kotlinx.datetime.LocalDateTime
import org.jetbrains.exposed.dao.UUIDEntity
import org.jetbrains.exposed.dao.UUIDEntityClass
import org.jetbrains.exposed.dao.id.EntityID
import org.jetbrains.exposed.dao.id.UUIDTable
import org.jetbrains.exposed.sql.Column
import org.jetbrains.exposed.sql.kotlin.datetime.datetime

public object WordsTable : UUIDTable("words") {
  public val word: Column<String> = varchar("word", 128).index()

  public val createdAt: Column<LocalDateTime> = datetime("created_at")

  public val updatedAt: Column<LocalDateTime> = datetime("updated_at")
}

public class WordsEntity(
  id: EntityID<UUID>,
) : UUIDEntity(id), ConvertTo<Words> {
  public var word: String by WordsTable.word

  public var createdAt: LocalDateTime by WordsTable.createdAt

  public var updatedAt: LocalDateTime by WordsTable.updatedAt

  public override fun to(): Words = Words(
    id = this.id.value,
    word = this.word,
  )

  public companion object : UUIDEntityClass<WordsEntity>(WordsTable)
}
